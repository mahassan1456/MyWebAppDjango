# Generated by Django 4.0.7 on 2022-10-02 04:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
                ('image', models.ImageField(null=True, upload_to='test/')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='Date Published')),
                ('user_p', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birthdate', models.DateField(null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='uploads/', verbose_name='')),
                ('canView', models.CharField(default='No', max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends_last_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_flag', models.BooleanField(default=False)),
                ('chat_last_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('chat_flag', models.BooleanField(default=False)),
                ('comments_last_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_flag', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DmThrough',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('new_messages', models.BooleanField()),
                ('who_last', models.CharField(max_length=40, null=True)),
                ('notification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.notification')),
                ('who_last_u', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('usermade', models.CharField(max_length=45, null=True)),
                ('comp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dm_set', to='polls.dmthrough')),
                ('fw', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fw', to=settings.AUTH_USER_MODEL)),
                ('mb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mb', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(max_length=500)),
                ('posted_by', models.TextField(max_length=50, null=True)),
                ('notify', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.notification')),
                ('user_c', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Circle',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('to_notify', models.BooleanField(default=False)),
                ('chats', models.ManyToManyField(null=True, related_name='chats', to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('requests', models.ManyToManyField(related_name='requests', to=settings.AUTH_USER_MODEL)),
                ('sent_requests', models.ManyToManyField(related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.question')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
